<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xyz.xcye.admin.dao.RoleDao">

    <resultMap id="roleResultMap" type="xyz.xcye.common.po.RoleDO">
        <id column="uid" property="uid"/>
        <result column="role" property="role"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        insert into au_role
            (role,create_time,update_time)
        values
            (#{roleDO.role},#{roleDO.createTime},#{roleDO.updateTime})
    </insert>

    <update id="update">
        update
            au_role
        <set>
            <if test="roleDO.role != null">
                role=#{roleDO.role},
            </if>
            <if test="roleDO.updateTime != null">
                update_time=#{roleDO.updateTime},
            </if>
        </set>
        where
            uid=#{roleDO.uid}
    </update>

    <delete id="deleteByUid">
        delete from
            au_role
        where
            uid=#{uid}
    </delete>

    <select id="queryAllByCondition" resultMap="roleResultMap">
        select
            uid,role,create_time,update_time
        from
            au_role
        <where>
            <if test="condition.startTime != null and condition.endTime != null">
                and create_time between #{condition.startTime} and #{condition.endTime}
            </if>
            <if test="condition.uid != null">
                and uid=#{condition.uid}
            </if>
            <if test="condition.keyword != null">
                and `role`=#{condition.keyword}
            </if>
        </where>
    </select>
    <update id="updateRoleByUidFalseAndRoleAndRoleAndRoleAfter">
        update role_dO
        set role = #{role,jdbcType=VARCHAR}
        where uid = false
          AND role = #{oldRole,jdbcType=VARCHAR}
          AND role = #{oldRole,jdbcType=VARCHAR}
          AND role > #{oldRole,jdbcType=VARCHAR}
    </update>
</mapper>