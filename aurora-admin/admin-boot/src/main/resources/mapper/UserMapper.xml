<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xyz.xcye.admin.dao.UserDao">

    <resultMap id="userResultMap" type="xyz.xcye.common.po.UserDO">
        <result column="is_verify_email" property="verifyEmail"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
        <result column="is_delete" property="delete"/>
    </resultMap>

    <insert id="insertUser">
        insert into au_user (
         uid,user_summary,nickname,gender,login_uid,
         site_uid,avatar,password,username,profession,is_verify_email,
         email_uid,user_account_uid,create_time,update_time,is_delete
         )

         values (
                 #{userDO.uid},#{userDO.userSummary},#{userDO.nickname},#{userDO.gender},#{userDO.loginUid},
                 #{userDO.siteUid},#{userDO.avatar},#{userDO.password},#{userDO.username},
                 #{userDO.profession},#{userDO.verifyEmail},#{userDO.emailUid},#{userDO.userAccountUid},
                 #{userDO.createTime},#{userDO.updateTime},#{userDO.delete}
                )
    </insert>

    <update id="updateUser">
        update
            au_user
        <set>
            <if test="userDO.userSummary != null">
                user_summary=#{userDO.userSummary},
            </if>
            <if test="userDO.nickname != null">
                nickname=#{userDO.nickname},
            </if>
            <if test="userDO.gender != null">
                gender=#{userDO.gender},
            </if>
            <if test="userDO.avatar != null">
                avatar=#{userDO.avatar},
            </if>
            <if test="userDO.username != null">
                username=#{userDO.username},
            </if>
            <if test="userDO.password != null">
                password=#{userDO.password},
            </if>
            <if test="userDO.profession != null">
                profession=#{userDO.profession},
            </if>
            <if test="userDO.verifyEmail != null">
                is_verify_email=#{userDO.verifyEmail},
            </if>
            <if test="userDO.updateTime != null">
                update_time=#{userDO.updateTime},
            </if>
            <if test="userDO.userAccountUid != null">
                user_account_uid=#{userDO.userAccountUid}
            </if>
            <if test="userDO.emailUid != null">
                email_uid=#{userDO.emailUid},
            </if>
            <if test="userDO.delete != null">
                is_delete=#{userDO.delete}
            </if>
        </set>
        where
            uid=#{userDO.uid}
    </update>

    <delete id="deleteByUid">
        delete from
            au_user
        where
            uid=#{uid}
    </delete>

    <select id="queryAllByCondition" resultMap="userResultMap">
        select
            uid,user_summary,nickname,gender,login_uid,
            site_uid,avatar,password,username,profession,is_verify_email,
            email_uid,user_account_uid,create_time,update_time,is_delete
        from
            au_user
        <where>
            <if test="condition.startTime != null and condition.endTime != null">
                and create_time between #{condition.startTime} and #{condition.endTime}
            </if>
            <if test="condition.uid != null">
                and uid=#{condition.uid}
            </if>
            <if test="condition.keyword != null">
                and username like concat('%', #{condition.keyword}, '%')
            </if>
            <if test="condition.otherUid != null">
                and user_account_uid=#{condition.otherUid}
            </if>
            <if test="condition.otherUid != null">
                and is_verify_email=#{condition.status}
            </if>
        </where>
    </select>
</mapper>